%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LaTeX Template: Project Modified (v 0.2) by jluo
%
% Original Source: http://www.howtotex.com
% Date: February 2019
% 
% This is a title page template which be used for articles & reports.
% 
% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[12pt]{report}
\usepackage[a4paper]{geometry}
\usepackage[myheadings]{fullpage}
\usepackage{fancyhdr}
\usepackage{lastpage}
\usepackage{graphicx, wrapfig, setspace, booktabs}
\usepackage[T1]{fontenc}
\usepackage[font=small, labelfont=bf]{caption}
\usepackage{fourier}
\usepackage[protrusion=true, expansion=true]{microtype}
\usepackage[english]{babel}
\usepackage{sectsty}
\usepackage{url, lipsum}
\usepackage{tgbonum}
\usepackage{hyperref}
\usepackage{xcolor}
\usepackage{listings}
\usepackage{color}
\usepackage{float}
 
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
 
\lstdefinestyle{mystyle}{
    backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}
 
\lstset{style=mystyle}

\newcommand{\HRule}[1]{\rule{\linewidth}{#1}}
\onehalfspacing
\setcounter{tocdepth}{5}
\setcounter{secnumdepth}{5}



%-------------------------------------------------------------------------------
% HEADER & FOOTER
%-------------------------------------------------------------------------------
\pagestyle{fancy}
\fancyhf{}
\setlength\headheight{15pt}
\fancyhead[L]{\thepage}
\fancyhead[R]{Knott}
%\fancyfoot[R]{Page \thepage\ of \pageref{LastPage}}
%-------------------------------------------------------------------------------
% TITLE PAGE
%-------------------------------------------------------------------------------

\begin{document}
{\fontfamily{cmr}\selectfont
\title{ \LARGE\textsc{ECE 351 Sect. 51 \\ Lab 3}
		\\ [2.0cm]
		\HRule{0.5pt} \\
		\LARGE \textbf{\uppercase{3}
		\HRule{0.5pt} \\ [0.5cm]
		\normalsize \today \vspace*{5\baselineskip}}
		}

\date{}

\author{
		Cade Knott\\}

\maketitle
\tableofcontents
\newpage

%-------------------------------------------------------------------------------
% Section title formatting
\sectionfont{\scshape}
%-------------------------------------------------------------------------------

%-------------------------------------------------------------------------------
% BODY
%-------------------------------------------------------------------------------

\section{Introduction}
The purpose of this lab was to practice more with the convolutions we have been dealing with in class. Convolutions are difficult to understand and time consuming, so mastering this concept with the use of Python will only improve our understanding. This will also allow us another way to evaluate these convolutions and check our work.
%\newpage

\section{Equations}
Given equations for functions:

$$f_1(t) = u(t-2)-u(t-9)$$
$$f_2(t) = e^{-t}u(t)$$
$$f_3(t) = r(t-2)[u(t-2)-u(t-3)]+r(4-t)[u(t-3)-u(t-4)].$$

\section{Methodology}

\textbf{Part 1}

This section of the lab began with creating three user defined functions that we could use to convolve in the second part of the lab. These three functions model the equations that we were given, using the ramp and step functions that we developed from the last lab. The functions look like this: 
\begin{lstlisting}
def ramp(t, m, start):
    y = np.zeros((len(t),1))
    for i in range(len(t)):
          if t[i] > start:
              y[i] = (m*t[i])-(m*start)
          else:
              y[i] = 0
    return y

def step(t, start):
    y = np.zeros((len(t),1))
    for i in range(len(t)):
          if t[i] > start:
              y[i] = 1    
          else:
              y[i] = 0
    return y

def func1(t):
    y = step(t, 2) - step(t, 9)
    return y
    
def func2(t):
    y = np.exp(-t)
    return y

def func3(t):
    y = (ramp(t, 1, 2)*(step(t, 2)-step(t, 3))) + (ramp(-t, 1, -4)*(step(t, 3)-step(t, 4)))
    return y
\end{lstlisting}

As you can see, the ramp and step functions are the same from last time. The new functions simply call these ramp and step functions, according to the equation they were intended to model.

\noindent\textbf{Part 2}

Next we got into the convolution. This was a much more complicated function than our other user defined functions.The code for this function is here:

\begin{lstlisting}
def my_convolve(f1,f2):
    Nf1 = len(f1)
    Nf2 = len(f2)
    f1Extended = np.append(f1, np.zeros((1,Nf2 - 1)))  #extending length of arrays to equal each other  
    f2Extended = np.append(f2, np.zeros((1,Nf1 - 1)))
    result = np.zeros(f1Extended.shape)
    for i in range(Nf2 + Nf1 - 2):
        result[i] = 0
        for j in range(Nf1):
            if(i - j + 1 > 0):
                try:
                    result[i] = result[i] + f1Extended[j]*f2Extended[i - j +1] #
                except:
                    print(i,j)
    return result
\end{lstlisting}

As can be seen, the first step in our convolution function is to determine the length of our result. To do this, we have to create a new variable to represent our new arrays and set it equal to the sum of the two lengths. The body of the function consists of a for loop, that is set to run for these two lengths, and multiply the functions by each other while they are overlapping. This creates our return value "\texttt{result}", which is the convolution of the two functions passed in. The last step for this part was to convolve our functions again, but this time using the scipy function, \texttt{sig.convolve(function1,function2)}. Once this was done, the procedure for this lab was complete.

\section{Results} 
\textbf{Part 1}

The following is the single figure that shows my first three user defined functions plotted in three different subplots:

\begin{figure}[H]
    \centering
    \includegraphics[width=15cm]{func1_3.png}
\end{figure}

As you can see from the plot, the functions perfectly describe the equations we were given at the beginning of the lab handout.

\noindent \textbf{Part 2}

This next part shows the results of my convolution function. The first graph is function 1 convolved with function 2:

\begin{figure}[H]
    \centering
    \includegraphics[width=15cm]{f1wf2.png}
\end{figure}

This plot demonstrates the convolution of our first two functions properly, and matches up with the plot that was generated from Scipy signal. The next plot was for the second function convolved with the third:

\begin{figure}[H]
    \centering
    \includegraphics[width=15cm]{f2wf3.png}
\end{figure}

This again shows an accurate convolution of two functions, as it replicates the Scipy plot. Finally, our last convolution of functions one and three:

\begin{figure}[H]
    \centering
    \includegraphics[width=15cm]{f1wf3.png}
\end{figure}

This last plot again reflects the functionality, and accuracy of the user defined convolve function. Here is a figure with all of the scipy plots, to verify the user defined convolve function:

\begin{figure}[H]
    \centering
    \includegraphics[width=15cm]{sigconvolve.png}
\end{figure}

With all these plots complete, the lab was over.

\section{Error Analysis}
Developing the convolve function was definitely the hardest part of this lab. Luckily, my TA was instrumental in my understanding and development of the code. Convolution alone is a very challenging operation to understand and perform, so writing code for this was all the more difficult. In order to develop the code we came up with we had to think of convolution in respect of what it physically does, which is reverse one function and multiply it through the other function as they overlap through time. It is weird to think of numbers moving like this, but its easier to imagine it as a for loop executing the multiplication for every value of time. This is why we implement the for loop in our function code, and set it last for the length of the two functions. After this we had to perform this multiplication, so that the for loop would execute it accordingly. After a little more time considering the function and its structure, it made much more sense how it operates.  

\section{Questions}
\begin{enumerate}
    \item Did you do this lab alone or with classmates? If you collaborated to get to the solution, what did that process
look like?
    
    This lab would have been a very difficult task to complete alone, luckily I worked with classmates. This consisted mostly of me trouble shooting my code to determine why it was not working. I would check with my classmates to see if they were having the same issues, which if they were, we would work together towards a solution. If not, one of my classmates was usually willing to look at my code with me and help me come up with ideas or lead me in the right direction with my code.
    \newline
    
    \item What was the most difficult part of this lab for you, and what did the process of figuring it out look like?
    
    The most difficult part for this lab was creating the convolve function. The process consisted me struggling with trying to match the definition of convolution to a function. I tried to think about what is really happening when you perform a convolution, but it was still very tough to imagine. My TA led the class in the right direction with our code, and we were able to determine how to convolve our functions from there. Now I feel that convolution is more clear in my head, after completing this lab.
    \newline
    
    \item Did you approach writing the code with analytical or graphical convolution in mind? Why did you chose this
    approach?
    
    It helped me to think of the code in a more analytical way, because I felt the definition was easier to translate to code than the graphical behavior. In the end, it ending up making more sense to me to think of the code this way.
    \newline
    
    \item Was any part of this lab not clearly explained?
    
    I thought this lab was well explained, it just left a lot up to the person doing the lab. It was tough to figure out how to complete the convolution function, but the task at hand was clear. I would say that the requirements for this lab were laid out quite well.
\end{enumerate}

\section{Conclusion}

Convolution is a very hard process to understand, but I feel that this lab contributed to clarifying the subject in my head. We were forced to think of convolution in a different way than usual, through coding. The more practice we gain using convolution, the better shape we will be in when we have to convolve complex signals. Also, this gives us a way of double checking our convolutions outside of lab, or for computing quick convolutions. Overall this lab was very useful and beneficial to my learning of the class material. I look forward to using this in future labs.
https://github.com/knottcade


%-------------------------------------------------------------------------------
%REFERENCES
%-------------------------------------------------------------------------------
%\newpage 
%\section{References}

%\textit{Inserting Images. (n.d.). Retrieved from %https://www.overleaf.com/learn/latex/Inserting_Images}
\end{document}
